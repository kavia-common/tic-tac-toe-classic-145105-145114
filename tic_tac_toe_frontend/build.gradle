//
// Frontend-local Gradle build shim for Expo-managed workflow.
//
// Purpose:
// - Allow analyzers/CI that invoke Gradle inside tic_tac_toe_frontend to resolve
//   Android Gradle Plugin and RN Gradle plugin versions without relying on the
//   repository-root settings.
// - Delegate to the generated android project when available.
//
buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    // Fallback versions in case generated android/ is not fully initialized yet.
    // These are compatible with RN 0.79.x and Gradle 8.13 as used by Expo SDK 53.
    dependencies {
        classpath("com.android.tools.build:gradle:8.5.2")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.24")
        // Do not declare react-native-gradle-plugin here; it is applied within the generated android project.
        // Declaring it at root causes resolution failures if versions mismatch or plugin not published at that version.
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

/**
 * Provide no-op tasks so analyzers calling 'gradlew check' won't fail.
 */
tasks.register("check") {
    group = "verification"
    description = "No-op check task for Expo-managed frontend shim."
    doLast {
        println("No-op: Use 'npm run verify' for lint/typecheck or 'npm run build:android:ci' for native build.")
    }
}

// Provide a help task to guide correct usage if someone runs Gradle at this level.
tasks.register("helpShim") {
    doLast {
        println("Frontend Gradle shim: The real Android project is at ./android after Expo prebuild.")
        println("Run 'npm run build:android:ci' to prebuild and assemble, or use EAS for release.")
    }
}

defaultTasks("check")
