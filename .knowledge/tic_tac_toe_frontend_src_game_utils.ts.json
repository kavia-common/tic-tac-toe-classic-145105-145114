{"is_source_file": true, "format": "TypeScript", "description": "This file defines utility functions for a Tic-Tac-Toe game, including board initialization, winner determination, game status evaluation, and available move enumeration.", "external_files": ["./types"], "external_methods": [], "published": ["createEmptyBoard", "getWinner", "isBoardFull", "getGameStatus", "availableMoves"], "classes": [], "methods": [{"name": "export function createEmptyBoard(): Board { createEmptyBoard", "description": "Creates and returns a new empty Tic-Tac-Toe board with 9 null cells.", "scope": "", "scopeKind": ""}, {"name": "export function getWinner(board: Board): Player | null { getWinner", "description": "Determines if there is a winner on the current board; returns the Player ('X' or 'O') or null if none.", "scope": "", "scopeKind": ""}, {"name": "export function isBoardFull(board: Board): boolean { isBoardFull", "description": "Checks if all cells on the board are filled (non-null).", "scope": "", "scopeKind": ""}, {"name": "export function getGameStatus(board: Board): GameStatus { getGameStatus", "description": "Returns the current game status as one of 'X_WON', 'O_WON', 'DRAW', or 'IN_PROGRESS' based on the board state.", "scope": "", "scopeKind": ""}, {"name": "export function availableMoves(board: Board): number[] { availableMoves", "description": "Returns an array of indices of the empty cells where a move can be made.", "scope": "", "scopeKind": ""}], "calls": ["getWinner", "isBoardFull"], "search-terms": ["tic-tac-toe", "game utilities", "board status", "win detection", "game state"], "state": 2, "file_id": 40, "knowledge_revision": 87, "git_revision": "", "ctags": [{"_type": "tag", "name": "CellValue", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^type CellValue = Player | null;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^    const v = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^  for (const [a,b,c] of winLines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "availableMoves", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^export function availableMoves(board: Board): number[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^  for (const [a,b,c] of winLines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^  for (const [a,b,c] of winLines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "createEmptyBoard", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^export function createEmptyBoard(): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getGameStatus", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^export function getGameStatus(board: Board): GameStatus {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getWinner", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^export function getWinner(board: Board): Player | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isBoardFull", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^export function isBoardFull(board: Board): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^  const res: number[] = [];$/", "language": "TypeScript", "kind": "constant", "scope": "availableMoves", "scopeKind": "function"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^    const v = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "w", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^  const w = getWinner(board);$/", "language": "TypeScript", "kind": "constant", "scope": "getGameStatus", "scopeKind": "function"}, {"_type": "tag", "name": "winLines", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-145105-145114/tic_tac_toe_frontend/src/game/utils.ts", "pattern": "/^const winLines: number[][] = [$/", "language": "TypeScript", "kind": "constant"}], "hash": "618871b430a81c45db0904c7caa9448b", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/game/utils.ts", "revision_history": [{"87": ""}]}